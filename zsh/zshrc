export PATH=/bin:/usr/bin:/usr/local/bin:${PATH}

export ZSH="$HOME/.oh-my-zsh"

export WORKON_HOME="$HOME/.virtualenvs"

fpath+=$HOME/code/dotfiles/zsh/pure

ZSH_THEME=""
ZSH_DISABLE_COMPFIX="true"

zet() {
  nvim "+Zet $*"
}

plugins=(git python npm tmux vscode colorize docker)

source $ZSH/oh-my-zsh.sh

# User configuration
source $HOME/.aliases

autoload -U promptinit; promptinit
prompt pure

export MANPATH="/usr/local/man:$MANPATH"

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# ssh
export SSH_KEY_PATH="~/.ssh/rsa_id"

export PATH="/usr/local/opt/openssl@1.1/bin:$PATH"
# Linking support by default
export LDFLAGS="-L$(brew --prefix openssl)/lib"
export CPPFLAGS="-I$(brew --prefix openssl)/include"
# export CFLAGS="-I$(brew --prefix openssl)/include"

export PKG_CONFIG_PATH="/usr/local/opt/openssl@1.1/lib/pkgconfig"

# Aliases
if [ -f ~/.aliases ]; then
  . ~/.aliases
fi

# FZF
export FZF_DEFAULT_COMMAND='rg --files --hidden'
export FZF_DEFAULT_OPTS='--bind ctrl-j:down,ctrl-k:up'

# n NODE VERSION MANAGER
export N_PREFIX=$HOME/.n
export PATH=$N_PREFIX/bin:$PATH

# this will find all unique globally installed binaries within each node version.
# loops over array and creates a temp bash function based on each item that first
# deletes the temp function, loads nvm, and then attempts to rerun the command
# with the correct binary
# declare -a NODE_GLOBALS=(`find ~/.nvm/versions/node -maxdepth 3 -type l -wholename '*/bin/*' | xargs -n1 basename | sort | uniq`)

NODE_GLOBALS+=("node")
# NODE_GLOBALS+=("nvm")

# load_nvm () {
#     export NVM_DIR="$HOME/.nvm"
#     [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
# }

# for cmd in "${NODE_GLOBALS[@]}"; do
#     eval "${cmd}(){ unset -f ${NODE_GLOBALS}; load_nvm; ${cmd} \$@ }"
# done

# GO
export PATH="$PATH:/usr/local/go/bin"
export GOBIN="$GOPATH/bin"
export GOPATH="$HOME/code"
export GOROOT="/usr/local/opt/go/libexec"
export PATH="$PATH:$GOPATH"
export PATH="$PATH:$GOBIN"

# PYENV
export PATH="$HOME/.pyenv/bin:$PATH"

# BASE16
BASE16_SHELL=$HOME/.config/base16-shell/
[ -n "$PS1" ] && [ -s $BASE16_SHELL/profile_helper.sh ] && eval "$($BASE16_SHELL/profile_helper.sh)"

#####
export PATH="/usr/local/opt/openssl@1.1/bin:$PATH"
export PATH="$PATH:/Users/munsterberg/.local/bin"
export PATH="/usr/local/sbin:$PATH"
export PATH="/usr/local/bin:$PATH"
export PATH="$HOME/.poetry/bin:$PATH"
export PATH="$PATH:$(npm get prefix)/bin"
export DYLD_LIBRARY_PATH=/usr/local/opt/openssl/lib:$DYLD_LIBRARY_PATH
export PATH="/Users/munsterberg/.local/share/solana/install/active_release/bin:$PATH"

eval "$(rbenv init -)"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# zsh is checking .zcompdump to see if it needs regenerating
# this makes it do that once a day
autoload -Uz compinit
if [ $(date +'%j') != $(stat -f '%Sm' -t '%j' ~/.zcompdump) ]; then
  compinit
else
  compinit -C
fi

# pnpm
export PNPM_HOME="/Users/munsterberg/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end